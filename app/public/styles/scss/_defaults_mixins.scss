$border_radius_htc: url("./border-radius.htc");

@mixin borderRadius($radius: 3px) {
  behavior: $border_radius_htc;
  -o-border-radius: $radius;
  -ms-border-radius: $radius;
  -moz-border-radius: $radius;
  -webkit-border-radius: $radius;
  -khtml-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;
}

@mixin backgroundGradientVertical($startColor: #FFF, $endColor: #EEE) {
  background: $startColor;
  background: -moz-linear-gradient(top, $startColor 0, $endColor 100%);
  background: -webkit-gradient(linear,left top,left bottom,color-stop(0, $startColor), color-stop(100%, $endColor));
  background: -webkit-linear-gradient(top, $startColor 0, $endColor 100%);
  background: -o-linear-gradient(top, $startColor 0, $endColor 100%);
  background: -ms-linear-gradient(top, $startColor 0, $endColor 100%);
  background: linear-gradient(to bottom, $startColor 0, $endColor 100%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=$startColor, endColorstr=$endColor, GradientType=0);
}

@mixin borderBottom($config: 1px solid #666) {
  border: 1px solid transparent;
  border-bottom: $config;
}

@mixin opacity($level: 100) {
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="$level")";
  filter: alpha(opacity=$level);
	-khtml-opacity: $level/100;
	-moz-opacity: $level/100;
	opacity: $level/100;
}

@mixin boxSizing() {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin textShadow($config: 0 0 3px, $color: #333) {
  text-shadow: $config $color;
}

@mixin boxShadow($config: 0 0 5px, $color: #333) {
  -moz-box-shadow: $config $color;
  -webkit-box-shadow: $config $color;
  box-shadow: $config $color;
}

@mixin boxShadowInset($config: 0 0 5px, $color: #333) {
  -moz-box-shadow: inset $config $color;
  -webkit-box-shadow: inset $config $color;
  box-shadow: inset $config $color;
}

@mixin transitionAll($speed: 0.2s, $easing: ease-in-out) {
  -moz-transition: all $speed $easing;
  -o-transition: all $speed $easing;
  -webkit-transition: all $speed $easing;
  transition: all $speed $easing;
}

@mixin scale($toSize: 1.1) {
  -ms-transform: scale($toSize);
  -webkit-transform: scale($toSize);
  -moz-transform: scale($toSize);
  -o-transform: scale($toSize);
  transform: scale($toSize);
}

@mixin appearance($type: none) {
  -webkit-appearance: $type;
  -moz-appearance: $type;
  -o-appearence: $type;
  -ms-appearance: $type;
  appearance: $type;
}

@mixin formElementHeight($height: 30px) {
  height: $height;
  line-height: $height;
}

@mixin respondTo($breakpoint) {
  @media (max-width: $breakpoint) {
    @content;
  }
}

@mixin fadeInAndOut($interval: 1s) {
  -webkit-animation: flickerAnimation $interval infinite;
  -moz-animation: flickerAnimation $interval infinite;
  -o-animation: flickerAnimation $interval infinite;
  animation: flickerAnimation $interval infinite;
}

@mixin heartbeatAnimation($interval: 1s) {
  -webkit-animation: heartBeat $interval ease-out infinite;
	-moz-animation: heartBeat $interval ease-out infinite;
	-ms-animation: heartBeat $interval ease-out infinite;
	animation: heartBeat $interval ease-out infinite;
}